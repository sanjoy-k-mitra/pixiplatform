import grails.doc.DocPublisher

buildscript {
    ext {
        grailsVersion = project.grailsVersion
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails:grails-docs:$grailsVersion"
    }
}

plugins {
    id "io.spring.dependency-management" version "0.5.2.RELEASE"
    id "com.jfrog.bintray" version "1.2"
}

version "3.0.0-SNAPSHOT"
group "org.grails.plugins"

apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: "spring-boot"
apply plugin: "org.grails.grails-plugin"
apply plugin: "org.grails.grails-gsp"
apply plugin: "org.grails.grails-doc"
apply from:'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

// Workaround for jansi dependency problem with groovydoc (https://discuss.gradle.org/t/gradle-task-groovydoc-failing-with-noclassdeffounderror/2541/21)
configurations {
    jansi.extendsFrom(runtime)
}
groovydoc {
    def title = "IPDS ${version}"
    groovyClasspath = project.configurations.jansi
}
dependencies {
    jansi 'org.fusesource.jansi:jansi:1.11'
}

ext {
    grailsVersion = project.grailsVersion
    gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    provided "org.grails:grails-web-boot"
    provided "org.grails:grails-dependencies"
    provided 'javax.servlet:javax.servlet-api:3.1.0'

    compile 'org.grails.plugins:spring-security-core:3.0.0'

    compile 'org.springframework.security.oauth:spring-security-oauth2:2.0.8.RELEASE', {
        [
            "spring-beans",
    	    "spring-core",
    	    "spring-context",
    	    "spring-aop",
    	    "spring-jdbc",
    	    "spring-webmvc",
    	    "spring-security-core",
    	    "spring-security-config",
    	    "spring-security-web",
    	    "spring-tx",
    	    "commons-codec"
        ].each { exclude module: it }
    }

    compile "com.fasterxml.jackson.core:jackson-databind:2.4.1.3"

    console "org.grails:grails-console"
}

task wrapper(type: Wrapper) {
    gradleVersion = gradleWrapperVersion
}

// Source: https://github.com/grails/grails-gradle-plugin/blob/master/gradle/docs.gradle
task gdocs() {
    group 'Documentation'
    description 'Generate Grails Doc style documentation'
    doLast {
        def srcDocs = file("src/docs")
        def outputDir = file("$buildDir/docs/manual")
        def publisher = new DocPublisher(srcDocs, outputDir)
        publisher.with {
            ant = project.ant
            title = 'Grails OAuth 2 Provider Plugin'
            subtitle = 'Grails OAuth2 Provider Plugin'
            version = project.version
            authors = 'Brian Saville, Bobby Vandiver, Roy Willemse'
            license = 'The Apache Software License, Version 2.0'
            copyright = ''
            footer = ''
            engineProperties = [:]
        }
        publisher.publish()
    }
}

bintray {
    pkg {
        userOrg = 'bluesliverx'
        repo = 'grails-plugins'
        name = "org.grails.plugins:$project.name"
        desc = "Grails OAuth 2 Provider Plugin"
        websiteUrl = "http://grails.org/plugin/$project.name"
        issueTrackerUrl = "https://github.com/bluesliverx/grails-spring-security-oauth2-provider/issues"
        vcsUrl = "https://github.com/bluesliverx/grails-spring-security-oauth2-provider"
        licenses = ['Apache-2.0']
        publicDownloadNumbers = true
        version {
            attributes = ['grails-plugin': "org.grails.plugins:$project.name"]
            name = project.version
        }
    }
}

bintrayUpload.dependsOn sourcesJar, javadocJar

